Given a sorted array of integers A of size N and an integer B, 
where array A is rotated at some pivot unknown beforehand.
Your task is to search for the target value B in the array. 
If found, return its index; otherwise, return -1.
public class Solve {
   
    public int Binary(int A[],int B){
      if (A == null || A.length == 0) {
            return -1;
        }

        int left = 0;
        int right = A.length - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (A[mid] == B) {
                return mid;
            }

            // If left part is sorted
            if (A[left] <= A[mid]) {
                if (B >= A[left] && B < A[mid]) {
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            }
            // If right part is sorted
            else {
                if (B > A[mid] && B <= A[right]) {
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            }
        }

        return -1;

    }
}
